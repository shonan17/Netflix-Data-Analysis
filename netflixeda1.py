# -*- coding: utf-8 -*-
"""NetflixEDA1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18ZtC-wlY35sdg2VFNA6Q6FPMhPdC4b1Q
"""


import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load Data
st.title("Netflix Exploratory Data Analysis")
df = pd.read_csv("netflix_titles.csv")
df.fillna("Unknown", inplace=True)
df["date_added"] = pd.to_datetime(df["date_added"], errors="coerce")

# Sidebar options
st.sidebar.header("Filters")
view_type = st.sidebar.radio("Select Type:", ["All", "Movie", "TV Show"])

if view_type != "All":
    df = df[df["type"] == view_type]

# Data Overview
st.subheader("Data Overview")
st.write(df.head())
st.write("Data Summary:")
st.write(df.describe())

# Visualizations
st.subheader("Visualizations")

# Movies vs. TV Shows Count
fig, ax = plt.subplots()
sns.countplot(x=df["type"], palette="magma", ax=ax)
plt.title("Movies vs. TV Shows")
st.pyplot(fig)

# Top 10 Genres
genres = df["listed_in"].str.split(", ").explode().value_counts().head(10)
fig, ax = plt.subplots()
sns.barplot(y=genres.index, x=genres.values, palette="viridis", ax=ax)
plt.title("Top 10 Genres")
st.pyplot(fig)

# Release Year Distribution
fig, ax = plt.subplots()
sns.histplot(df["release_year"], bins=15, kde=True, color="red", ax=ax)
plt.title("Release Trend Over Years")
st.pyplot(fig)

# Content Ratings
fig, ax = plt.subplots()
sns.barplot(y=df["rating"].value_counts().index, x=df["rating"].value_counts().values, palette="magma", ax=ax)
plt.title("Content Ratings Distribution")
st.pyplot(fig)

# Monthly Additions Trend
df['month_added'] = df['date_added'].dt.month_name()
fig, ax = plt.subplots()
sns.countplot(x=df['month_added'], order=["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], palette="coolwarm", ax=ax)
plt.xticks(rotation=45)
plt.title("Monthly Additions Trend")
st.pyplot(fig)

# Top 10 Most Frequent Directors
top_directors = df[df['director'] != "Unknown"]['director'].value_counts().head(10)
fig, ax = plt.subplots()
sns.barplot(y=top_directors.index, x=top_directors.values, palette="rocket", ax=ax)
plt.title("Top 10 Most Frequent Directors on Netflix")
st.pyplot(fig)

# Top 10 Actors
st.subheader("Top 10 Actors with the Most Appearances")
top_celebrities = df[df['cast'] != "Unknown"]['cast'].str.split(", ").explode().value_counts().head(10)
fig, ax = plt.subplots()
sns.barplot(y=top_celebrities.index, x=top_celebrities.values, palette="rocket", ax=ax)
plt.title("Top 10 Actors with the Most Appearances on Netflix")
st.pyplot(fig)

# Distribution of Movie Durations
df['duration_minutes'] = df['duration'].str.extract('(\d+)').astype(float)
fig, ax = plt.subplots()
sns.histplot(df[df['type'] == "Movie"]['duration_minutes'].dropna(), bins=30, kde=True, color="purple", ax=ax)
plt.title("Distribution of Movie Durations")
st.pyplot(fig)

# Top 5 Longest Movies
longest_movies = df[df['type'] == "Movie"].nlargest(5, 'duration_minutes')
fig, ax = plt.subplots()
sns.barplot(y=longest_movies['title'], x=longest_movies['duration_minutes'], palette="Reds_r", ax=ax)
plt.title("Top 5 Longest Movies on Netflix")
st.pyplot(fig)

# Top 5 Shortest Movies
shortest_movies = df[df['type'] == "Movie"].nsmallest(5, 'duration_minutes')
fig, ax = plt.subplots()
sns.barplot(y=shortest_movies['title'], x=shortest_movies['duration_minutes'], palette="Blues_r", ax=ax)
plt.title("Top 5 Shortest Movies on Netflix")
st.pyplot(fig)

# Top 10 Countries with Most TV Shows
tv_shows_by_country = df[(df['type'] == "TV Show") & (df['country'] != "Unknown")]['country'].value_counts().head(10)
fig, ax = plt.subplots()
sns.barplot(y=tv_shows_by_country.index, x=tv_shows_by_country.values, palette="viridis", ax=ax)
plt.title("Top 10 Countries with the Most TV Shows")
st.pyplot(fig)

st.write("### More insights coming soon!")
